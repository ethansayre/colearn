{"version":3,"sources":["components/Officer/Officer.js","components/Journalism/Journalism.js","components/Policy/Policy.js","components/State/State.js","components/Nav/Nav.js","components/Construction/Construction.js","components/StatusUpdate/StatusUpdate.js","components/MainPage/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["React","Component","State","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","firebase","database","ref","auth","currentUser","uid","once","then","snapshot","setState","val","handleSubmit","e","preventDefault","state","react_default","a","createElement","className","onSubmit","react_router_dom","to","href","value","name","required","onChange","handleChanges","type","placeholder","disabled","email","phone","school","location","campustype","grade","different","fitforrole","why","ideas","anything","Nav","src","htmlFor","id","checkBox","onClick","checked","displayName","signOut","activeClassName","exact","content","Construction","class","StatusUpdate","defineProperty","target","update","console","log","confirmed","parent","objectSpread","fetched","style","fontFamily","color","display","JSON","stringify","length","undefined","position","NavRoute","_ref","path","component","react_router","render","components_Nav_Nav","MainPage","MainPage_NavRoute","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","App","isSignedIn","hasUpdated","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","_this2","unregisterAuthObserver","onAuthStateChanged","user","textAlign","rel","width","maxWidth","height","StyledFirebaseAuth_default","verticalAlign","firebaseAuth","components_MainPage_MainPage","logOutHandler","Boolean","window","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iSAEsBA,IAAMC,UCAHD,IAAMC,UCAVD,IAAMC,iBCyKZC,cAtKX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAMVQ,kBAAoB,WAChBC,IAASC,WAAWC,IAAI,wBAA0BF,IAASG,OAAOC,YAAYC,KAAKC,KAAK,SAASC,KAAK,SAACC,GACnGhB,EAAKiB,SAASD,EAASE,UATZlB,EAanBmB,aAAe,SAACC,GACZA,EAAEC,kBAXFrB,EAAKsB,MAAQ,GAHEtB,6EAsBLoB,qCASV,OACIG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBAAb,wCAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,QAAME,SAAUxB,KAAKgB,cACjBI,EAAAC,EAAAC,cAAA,WAASC,UAAW,mBAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,WAAT,iCAAuDN,EAAAC,EAAAC,cAAA,WAD3D,4MAE6MF,EAAAC,EAAAC,cAAA,KAAGK,KAAK,+BAAR,wBAF7M,6BAMJP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SAAjB,QACIH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,SAAOM,MAAO5B,KAAKmB,MAAMU,KAAMC,UAAQ,EAACC,SAAU/B,KAAKgC,cAAeH,KAAK,OAAON,UAAU,QAAQU,KAAK,OAAOC,YAAY,kBAAkBC,UAAQ,MAIlKf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SAAjB,SACIH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,SAAOM,MAAO5B,KAAKmB,MAAMiB,MAAON,UAAQ,EAACC,SAAU/B,KAAKgC,cAAeH,KAAK,QAAQN,UAAU,QAAQU,KAAK,OAAOC,YAAY,wBAAwBC,UAAQ,MAI1Kf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SAAjB,gBACIH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,SAAOM,MAAO5B,KAAKmB,MAAMkB,MAAON,SAAU/B,KAAKgC,cAAeH,KAAK,QAAQN,UAAU,QAAQU,KAAK,OAAOC,YAAY,+BAA+BC,UAAQ,MAIxKf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SAAjB,UACIH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,SAAOM,MAAO5B,KAAKmB,MAAMmB,OAAQR,UAAQ,EAACC,SAAU/B,KAAKgC,cAAeH,KAAK,SAASN,UAAU,QAAQU,KAAK,OAAOC,YAAY,wDAAwDC,UAAQ,MAI5Mf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SAAjB,qCACIH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,SAAOM,MAAO5B,KAAKmB,MAAMoB,SAAUT,UAAQ,EAACC,SAAU/B,KAAKgC,cAAeH,KAAK,WAAWN,UAAU,QAAQU,KAAK,OAAOC,YAAY,8CAA8CC,UAAQ,MAItMf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SAAjB,kBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,UAAQM,MAAO5B,KAAKmB,MAAMqB,WAAYV,UAAQ,EAACC,SAAU/B,KAAKgC,cAAeH,KAAK,aAAaM,UAAQ,GACnGf,EAAAC,EAAAC,cAAA,UAAQM,MAAM,MAAd,eACAR,EAAAC,EAAAC,cAAA,UAAQM,MAAM,OAAd,sBACAR,EAAAC,EAAAC,cAAA,UAAQM,MAAM,SAAd,aAMhBR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SAAjB,mBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,UAAQM,MAAO5B,KAAKmB,MAAMsB,MAAOX,UAAQ,EAACC,SAAU/B,KAAKgC,cAAeH,KAAK,QAAQM,UAAQ,GACzFf,EAAAC,EAAAC,cAAA,UAAQM,MAAM,QAAd,QACAR,EAAAC,EAAAC,cAAA,UAAQM,MAAM,QAAd,QACAR,EAAAC,EAAAC,cAAA,UAAQM,MAAM,QAAd,QACAR,EAAAC,EAAAC,cAAA,UAAQM,MAAM,QAAd,QACAR,EAAAC,EAAAC,cAAA,UAAQM,MAAM,QAAd,QACAR,EAAAC,EAAAC,cAAA,UAAQM,MAAM,QAAd,QACAR,EAAAC,EAAAC,cAAA,UAAQM,MAAM,QAAd,YAMhBR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SAAjB,6FACIH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACfH,EAAAC,EAAAC,cAAA,YAAUM,MAAO5B,KAAKmB,MAAMuB,UAAWZ,UAAQ,EAACC,SAAU/B,KAAKgC,cAAeH,KAAK,YAAYN,UAAU,WAAWW,YAAY,wDAAwDC,UAAQ,MAIxMf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SAAjB,oJACIH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACfH,EAAAC,EAAAC,cAAA,YAAUM,MAAO5B,KAAKmB,MAAMwB,WAAYb,UAAQ,EAACC,SAAU/B,KAAKgC,cAAeH,KAAK,aAAaN,UAAU,WAAWW,YAAY,wDAAwDC,UAAQ,MAI1Mf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SAAjB,iEACIH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACfH,EAAAC,EAAAC,cAAA,YAAUM,MAAO5B,KAAKmB,MAAMyB,IAAKd,UAAQ,EAACC,SAAU/B,KAAKgC,cAAeH,KAAK,MAAMN,UAAU,WAAWW,YAAY,wDAAwDC,UAAQ,MAI5Lf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SAAjB,8KACIH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACfH,EAAAC,EAAAC,cAAA,YAAUM,MAAO5B,KAAKmB,MAAM0B,MAAOd,SAAU/B,KAAKgC,cAAeH,KAAK,QAAQN,UAAU,WAAWW,YAAY,gFAAgFC,UAAQ,MAI/Mf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SAAjB,mDACIH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACfH,EAAAC,EAAAC,cAAA,YAAUM,MAAO5B,KAAKmB,MAAM2B,SAAUf,SAAU/B,KAAKgC,cAAeH,KAAK,WAAWN,UAAU,WAAWW,YAAY,8EAA8EC,UAAQ,MAUnNf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,UAAQW,KAAK,SAASV,UAAU,qBAAhC,uBA3JhB9B,IAAMC,mBCmFXqD,mLAjFF,IAAAlD,EAAAG,KACL,OACIoB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACPH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YACTH,EAAAC,EAAAC,cAAA,OAAK0B,IAAI,6BAGjB5B,EAAAC,EAAAC,cAAA,SAAO2B,QAAQ,cAAc1B,UAAU,cACnCH,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,cAEJF,EAAAC,EAAAC,cAAA,SAAOW,KAAK,WAAWiB,GAAG,cAAc3B,UAAU,YAAYhB,IAAK,SAAAA,GAAG,OAAIV,EAAKsD,SAAW5C,KAC1Fa,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAASC,GAAG,IAAI0B,QAAS,WAAOvD,EAAKsD,SAASE,SAAU,GAAS9B,UAAU,oCACvEH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAOH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBADxC,SAGAH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAASC,GAAG,YAAY0B,QAAS,WAAOvD,EAAKsD,SAASE,SAAU,GAAS9B,UAAU,oCAC/EH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAOH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBADxC,wCAUAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,6BACTH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAOH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAyBlB,IAASG,OAAOC,YAAY6C,aAE7FlC,EAAAC,EAAAC,cAAA,KAAG8B,QAAS,kBAAM/C,IAASG,OAAO+C,WAAWhC,UAAU,mBACnDH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAOH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,4BAMxDH,EAAAC,EAAAC,cAAA,WAASC,UAAU,sCAEfH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,uEACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,8BAAb,cACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACVH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAS+B,gBAAgB,YAAY9B,GAAG,IAAI+B,OAAK,GAC7CrC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAOH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBADxC,UAIJH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,KAAG8B,QAAS,SAACnC,GAAOA,EAAEC,mBAClBE,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAOH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBADxC,iBAIAH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAS+B,gBAAgB,YAAY9B,GAAG,aACpCN,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBAAgBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBADjD,iCAgBpBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACVvB,KAAKJ,MAAM8D,kBA3ElBhE,aCsBHiE,cAxBX,SAAAA,EAAY/D,GAAQ,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAA2D,GAAA7D,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6D,GAAAxD,KAAAH,KACVJ,0EAIN,OACIwB,EAAAC,EAAAC,cAAA,OAAKsC,MAAM,WACPxC,EAAAC,EAAAC,cAAA,OAAKsC,MAAM,QACPxC,EAAAC,EAAAC,cAAA,OAAKsC,MAAM,eACPxC,EAAAC,EAAAC,cAAA,KAAGsC,MAAM,qBAAT,gBAEJxC,EAAAC,EAAAC,cAAA,OAAKsC,MAAM,gBACPxC,EAAAC,EAAAC,cAAA,WAASsC,MAAM,sBACXxC,EAAAC,EAAAC,cAAA,OAAKsC,MAAM,gBAAX,2HAC4HxC,EAAAC,EAAAC,cAAA,KAAGK,KAAK,2BAAR,eAD5H,gBAdDlC,IAAMC,mBC0FlBmE,cAvFX,SAAAA,EAAYjE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6D,IACfhE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+D,GAAA1D,KAAAH,KAAMJ,KAYVoC,cAAgB,SAACf,GACbpB,EAAKiB,SAALhB,OAAAgE,EAAA,EAAAhE,CAAA,GAAiBmB,EAAE8C,OAAOlC,KAAOZ,EAAE8C,OAAOnC,OAAS,WAE/CvB,IAASC,WAAWC,IAAI,wBAA0BF,IAASG,OAAOC,YAAYC,KAAKsD,OAAOnE,EAAKsB,OAC/F8C,QAAQC,IAAIrE,EAAKsB,UAjBNtB,EAqBnBmB,aAAe,SAACC,GACZA,EAAEC,iBACFrB,EAAKiB,SAAS,CAAEqD,WAAW,GAAQ,WAE/B9D,IAASC,WAAWC,IAAI,wBAA0BF,IAASG,OAAOC,YAAYC,KAAKsD,OAAOnE,EAAKsB,OAC/F8C,QAAQC,IAAIrE,EAAKsB,UAxBrBtB,EAAKsB,MAAQ,GAFEtB,mFAOf,IAAIuE,EAASpE,KACbK,IAASC,WAAWC,IAAI,wBAA0BF,IAASG,OAAOC,YAAYC,KAAKC,KAAK,SAASC,KAAK,SAASC,GAC3GuD,EAAOtD,SAAPhB,OAAAuE,EAAA,EAAAvE,CAAA,CAAiBwE,SAAW,GAASzD,EAASE,2CAsBlD,OACIK,EAAAC,EAAAC,cAAA,OAAKsC,MAAM,WACPxC,EAAAC,EAAAC,cAAA,OAAKsC,MAAM,QACPxC,EAAAC,EAAAC,cAAA,OAAKsC,MAAM,eACPxC,EAAAC,EAAAC,cAAA,KAAGsC,MAAM,qBAAT,kBAEJxC,EAAAC,EAAAC,cAAA,OAAKsC,MAAM,eAAeW,MAAO,CAACC,WAAY,eAAgBC,MAAO,QAASC,QAAUC,KAAKC,UAAU5E,KAAKmB,OAAO0D,QAAU,QAAwBC,GAAnB9E,KAAKmB,MAAMU,WAA4CiD,GAAvB9E,KAAKmB,MAAM4D,SAAyB,OAAS,YAA/M,kBAEI3D,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAItB,KAAKmB,MAAMU,KACfT,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAFA,oFAGkFtB,KAAKmB,MAAM4D,SAH7F,IAIA3D,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WAJN,iHAMAF,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WANN,uKAQAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACPH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,SAAOM,MAAO5B,KAAKmB,MAAMkB,MAAON,SAAU/B,KAAKgC,cAAeH,KAAK,QAAQN,UAAU,kBAAkBU,KAAK,OAAOC,YAAY,4DAG3Id,EAAAC,EAAAC,cAAA,WAbA,0IAeAF,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WAfN,YAgBSF,EAAAC,EAAAC,cAAA,WAhBT,uBAkBAF,EAAAC,EAAAC,cAAA,YAGAF,EAAAC,EAAAC,cAAA,QAAME,SAAUxB,KAAKgB,cACjBI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,UAAQW,KAAK,SAASV,UAAU,+BAA+B,0BAA4BvB,KAAKmB,MAAM4D,YAG9G3D,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,WAASC,UAAWvB,KAAKmB,MAAMgD,UAAY,qBAAuB,sBAC9D/C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACVvB,KAAKmB,MAAMgD,UAAY,iDAAmD,uFAIvF/C,EAAAC,EAAAC,cAAA,OAAKsC,MAAM,eAAeW,MAAO,CAACE,MAAO,QAASC,SAAUC,KAAKC,UAAU5E,KAAKmB,OAAO0D,QAAU,QAAwBC,GAAnB9E,KAAKmB,MAAMU,WAA4CiD,GAAvB9E,KAAKmB,MAAM4D,WAA0B/E,KAAKmB,MAAMmD,QAAU,UAAY,SACxMlD,EAAAC,EAAAC,cAAA,WAASC,UAAW,qBAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAf,yJA7ED9B,IAAMC,WCO3BsF,EAAW,SAAAC,GAAA,IAAExB,EAAFwB,EAAExB,MAAOyB,EAATD,EAASC,KAAiBxF,EAA1BuF,EAAeE,UAAf,OACb/D,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAO3B,MAAOA,EAAOyB,KAAMA,EAAMG,OAAQ,SAACzF,GAAD,OACrCwB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACgE,EAAD,CAAK5B,QAAUtC,EAAAC,EAAAC,cAAC5B,EAAcE,UAuB3B2F,cAjBX,SAAAA,EAAY3F,GAAQ,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAuF,GAAAzF,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyF,GAAApF,KAAAH,KACVJ,0EAIN,OACIwB,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACIL,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,KACIhE,EAAAC,EAAAC,cAACkE,EAAD,CAAU/B,OAAK,EAAC0B,UAAWxB,EAAcuB,KAAK,MAC9C9D,EAAAC,EAAAC,cAACkE,EAAD,CAAU/B,OAAK,EAAC0B,UAAWxF,EAAOuF,KAAK,cACvC9D,EAAAC,EAAAC,cAACkE,EAAD,CAAU/B,OAAK,EAAC0B,UAAWtB,EAAcqB,KAAK,qBAX3CzF,IAAMC,WCJ7BW,IAASoF,cARI,CACXC,OAAQ,0CACRC,WAAY,wBACZC,YAAa,2CACbC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,qBA4DNC,6MAtDb7E,MAAQ,CACN8E,YAAY,EACZC,YAAY,KAIdC,SAAW,CAETC,WAAY,QAEZC,cAAe,CACbhG,IAASG,KAAK8F,mBAAmBC,aAEnCC,UAAW,CAETC,4BAA6B,kBAAM,wFAKnB,IAAAC,EAAA1G,KAClBA,KAAK2G,uBAAyBtG,IAASG,OAAOoG,mBAC1C,SAACC,GACCH,EAAK5F,SAAS,CAACmF,aAAcY,EAAMX,YAAY,qDAOrDlG,KAAK2G,0DAIL,OAAK3G,KAAKmB,MAAM8E,YAAcjG,KAAKmB,MAAM+E,WAErC9E,EAAAC,EAAAC,cAAA,OAAKiD,MAAO,CAACuC,UAAW,WACtB1F,EAAAC,EAAAC,cAAA,QAAMK,KAAK,YAAYoF,IAAI,eAC3B3F,EAAAC,EAAAC,cAAA,OAAK0B,IAAI,yBAAyBuB,MAAO,CAACyC,MAAO,MAAOC,SAAU,QAASC,OAAQ,UACnF9F,EAAAC,EAAAC,cAAC6F,EAAA9F,EAAD,CAAoBkD,MAAO,CAAC6C,cAAe,UAAWjB,SAAUnG,KAAKmG,SAAUkB,aAAchH,IAASG,UAGjGR,KAAKmB,MAAM+E,YAAclG,KAAKmB,MAAM8E,WAE3C7E,EAAAC,EAAAC,cAACgG,EAAD,CAAUC,cAAe,kBAAMlH,IAASG,OAAO+C,WAAWlD,SAAUA,MAIpEe,EAAAC,EAAAC,cAAA,mBAlDU7B,IAAMC,WCLJ8H,QACW,cAA7BC,OAAOlF,SAASmF,UAEe,UAA7BD,OAAOlF,SAASmF,UAEhBD,OAAOlF,SAASmF,SAASC,MACvB,2DCVNC,IAASvC,OAAOjE,EAAAC,EAAAC,cAACuG,EAAD,MAASC,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtH,KAAK,SAAAuH,GACjCA,EAAaC","file":"static/js/main.130fa051.chunk.js","sourcesContent":["import React from 'react';\n\nclass Officer extends React.Component {\n    constructor(props) {\n        super(props);\n        //this.props.firebase.database().ref('submissions/officer/').child(this.props.firebase.auth().currentUser.uid).set({...this.state});\n        this.state = {\n            name: \"\",\n            grade: \"\",\n            politicsimportant: \"\",\n            fitforrole: \"\",\n            ideas: \"\"\n        };\n        \n        this.handleChanges = this.handleChanges.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        var parent = this;\n        this.props.firebase.database().ref('submissions/officer/' + this.props.firebase.auth().currentUser.uid).once('value').then(function(snapshot) {\n            parent.setState(snapshot.val());\n        });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        this.setState({ submitted: true }, () => {\n            //this.props.firebase.database().ref('submissions/officer/').child(this.props.firebase.auth().currentUser.uid).set({...this.state});\n            this.props.firebase.database().ref('submissions/officer/' + this.props.firebase.auth().currentUser.uid).set(this.state);\n            console.log(this.state);\n        });\n    }\n\n    handleChanges(e) {\n        this.setState({ [e.target.name]: e.target.value }, () => {\n            //this.props.firebase.database().ref('submissions/officer/').child(this.props.firebase.auth().currentUser.uid).set({...this.state});\n            this.props.firebase.database().ref('submissions/officer/' + this.props.firebase.auth().currentUser.uid).set(this.state);\n            console.log(this.state);\n        });\n    }\n    \n    render() {\n        return (\n            <div className=\"section\">\n                <div className=\"card\">\n                    <div className=\"card-header\">\n                        <p className=\"card-header-title\">Officer Application</p>\n                    </div>\n                    <div className=\"card-content\">\n                        <div className=\"content\">\n                            <form onSubmit={this.handleSubmit}>\n                                <article className={\"message is-success\"}>\n                                    <div className=\"message-body\">\n                                        Applications are closed at this time. You may continue to view or archive your application until 2 weeks after results are released. There are no status updates at this time; expect results to be released no later than Friday, July 26, 2019. Thank you for applying; we look forward to seeing your application!\n                                    </div>\n                                </article>\n\n                                <div className=\"field\">\n                                    <label className=\"label\">Name</label>\n                                        <div className=\"control\">\n                                            <input value={this.state.name} required onChange={this.handleChanges} name=\"name\" className=\"input\" type=\"text\" placeholder=\"e.g John Smith\" disabled />\n                                        </div>\n                                </div>\n\n                                <div className=\"field\">\n                                    <label className=\"label\">Grade</label>\n                                    <div className=\"control\">\n                                        <div className=\"select\">\n                                            <select value={this.state.grade} required onChange={this.handleChanges} name=\"grade\" disabled>\n                                                <option value=\"\">Choose grade</option>\n                                                <option value=\"9\">9</option>\n                                                <option value=\"10\">10</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className=\"field\">\n                                    <label className=\"label\">How can politics affect people in our community? Why is political awareness important?</label>\n                                        <div className=\"control\">\n                                        <textarea value={this.state.politicsimportant} required onChange={this.handleChanges} name=\"politicsimportant\" className=\"textarea\" placeholder=\"Politics are important because...\" disabled></textarea>\n                                        </div>\n                                </div>\n\n                                <div className=\"field\">\n                                    <label className=\"label\">Briefly explain why you are fit for the role. What have you done in the past in terms of community involvement, volunteering, and/or leadership?</label>\n                                        <div className=\"control\">\n                                        <textarea value={this.state.fitforrole} required onChange={this.handleChanges} name=\"fitforrole\" className=\"textarea\" placeholder=\"I am well-suited for this position because I...\" disabled></textarea>\n                                        </div>\n                                </div>\n\n                                <div className=\"field\">\n                                    <label className=\"label\">(Optional) What are your ideas for Unipolitics? What are some projects that you believe could help extend political awareness and neutrality in our community?</label>\n                                        <div className=\"control\">\n                                        <textarea value={this.state.ideas} onChange={this.handleChanges} name=\"ideas\" className=\"textarea\" placeholder=\"A great project would be... disabled\"></textarea>\n                                        </div>\n                                </div>\n\n                                <article className={this.state.submitted ? \"message is-success\" : \"message is-success is-hidden\"}>\n                                    <div className=\"message-body\">\n                                        Your application has been submitted! Feel free to come back to this page at any time and edit your application (your progress is stored in the cloud)!\n                                    </div>\n                                </article>\n\n                                <div className=\"control\">\n                                    <button type=\"submit\" className=\"button is-primary\">Submit</button>\n                                </div>\n                            </form>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Officer;","import React from 'react';\n\nclass Journalism extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: \"\",\n            grade: \"\",\n            imgurl: \"\",\n            topic: \"\",\n            content: \"\",\n            title: \"\"\n        };\n        \n        this.handleChanges = this.handleChanges.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        var parent = this;\n        this.props.firebase.database().ref('submissions/journalism/' + this.props.firebase.auth().currentUser.uid).once('value').then(function(snapshot) {\n            parent.setState(snapshot.val());\n        });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        this.setState({ submitted: true }, () => {\n            this.props.firebase.database().ref('submissions/journalism/' + this.props.firebase.auth().currentUser.uid).set(this.state);\n            console.log(this.state);\n        });\n    }\n\n    handleChanges(e) {\n        this.setState({ [e.target.name]: e.target.value }, () => {\n            this.props.firebase.database().ref('submissions/journalism/' + this.props.firebase.auth().currentUser.uid).set(this.state);\n            console.log(this.state);\n        });\n    }\n    \n    render() {\n        return (\n            <div className=\"section\">\n                <div className=\"card\">\n                    <div className=\"card-header\">\n                        <p className=\"card-header-title\">Journalism Entry</p>\n                    </div>\n                    <div className=\"card-content\">\n                        <div className=\"content\">\n                            <form onSubmit={this.handleSubmit}>\n                                <div className=\"field\">\n                                    <label className=\"label\">Name</label>\n                                        <div className=\"control\">\n                                            <input value={this.state.name} required onChange={this.handleChanges} name=\"name\" className=\"input\" type=\"text\" placeholder=\"e.g John Smith\" />\n                                        </div>\n                                </div>\n\n                                <div className=\"field\">\n                                    <label className=\"label\">Grade</label>\n                                    <div className=\"control\">\n                                        <div className=\"select\">\n                                            <select value={this.state.grade} required onChange={this.handleChanges} name=\"grade\">\n                                                <option value=\"\">Choose grade</option>\n                                                <option value=\"9\">9</option>\n                                                <option value=\"10\">10</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className=\"field\">\n                                    <label className=\"label\">Image URL</label>\n                                        <div className=\"control\">\n                                            <input value={this.state.imgurl} required onChange={this.handleChanges} name=\"imgurl\" className=\"input\" type=\"text\" placeholder=\"Find a public domain image, then paste the URL here.\" />\n                                        </div>\n                                </div>\n\n                                <div className=\"field\">\n                                    <label className=\"label\">Topic</label>\n                                        <div className=\"control\">\n                                            <input value={this.state.topic} required onChange={this.handleChanges} name=\"topic\" className=\"input\" type=\"text\" placeholder=\"Type the general topic of your article here.\" />\n                                        </div>\n                                </div>\n\n                                <div className=\"field\">\n                                    <label className=\"label\">Title</label>\n                                        <div className=\"control\">\n                                            <input value={this.state.title} required onChange={this.handleChanges} name=\"title\" className=\"input\" type=\"text\" placeholder=\"Type the title of the article here.\" />\n                                        </div>\n                                </div>\n\n                                <div className=\"field\">\n                                    <label className=\"label\">Article text</label>\n                                        <div className=\"control\">\n                                        <textarea value={this.state.content} required onChange={this.handleChanges} name=\"content\" className=\"textarea\" placeholder=\"Article text...\"></textarea>\n                                        </div>\n                                </div>\n\n                                <article className={this.state.submitted ? \"message is-success\" : \"message is-success is-hidden\"}>\n                                    <div className=\"message-body\">\n                                        Your article has been submitted! Feel free to come back to this page at any time and edit your article (your progress is stored in the cloud)!\n                                    </div>\n                                </article>\n\n                                <div className=\"control\">\n                                    <button type=\"submit\" className=\"button is-primary\">Submit</button>\n                                </div>\n                            </form>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Journalism;","import React from 'react';\n\nclass Policy extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: \"\",\n            grade: \"\",\n            policy: \"\",\n            solution: \"\",\n        };\n        \n        this.handleChanges = this.handleChanges.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        var parent = this;\n        this.props.firebase.database().ref('submissions/policy/' + this.props.firebase.auth().currentUser.uid).once('value').then(function(snapshot) {\n            parent.setState(snapshot.val());\n        });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        this.setState({ submitted: true }, () => {\n            this.props.firebase.database().ref('submissions/policy/' + this.props.firebase.auth().currentUser.uid).set(this.state);\n            console.log(this.state);\n        });\n    }\n\n    handleChanges(e) {\n        this.setState({ [e.target.name]: e.target.value }, () => {\n            this.props.firebase.database().ref('submissions/policy/' + this.props.firebase.auth().currentUser.uid).set(this.state);\n            console.log(this.state);\n        });\n    }\n    \n    render() {\n        return (\n            <div className=\"section\">\n                <div className=\"card\">\n                    <div className=\"card-header\">\n                        <p className=\"card-header-title\">Policy Solution Entry</p>\n                    </div>\n                    <div className=\"card-content\">\n                        <div className=\"content\">\n                            <form onSubmit={this.handleSubmit}>\n                                <div className=\"field\">\n                                    <label className=\"label\">Name</label>\n                                        <div className=\"control\">\n                                            <input value={this.state.name} required onChange={this.handleChanges} name=\"name\" className=\"input\" type=\"text\" placeholder=\"e.g John Smith\" />\n                                        </div>\n                                </div>\n\n                                <div className=\"field\">\n                                    <label className=\"label\">Grade</label>\n                                    <div className=\"control\">\n                                        <div className=\"select\">\n                                            <select value={this.state.grade} required onChange={this.handleChanges} name=\"grade\">\n                                                <option value=\"\">Choose grade</option>\n                                                <option value=\"9\">9</option>\n                                                <option value=\"10\">10</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className=\"field\">\n                                    <label className=\"label\">Policy</label>\n                                        <div className=\"control\">\n                                            <input value={this.state.policy} required onChange={this.handleChanges} name=\"policy\" className=\"input\" type=\"text\" placeholder=\"Ex. Healthcare\" />\n                                        </div>\n                                </div>\n                                \n                                <div className=\"field\">\n                                    <label className=\"label\">Solution</label>\n                                        <div className=\"control\">\n                                        <textarea value={this.state.solution} required onChange={this.handleChanges} name=\"solution\" className=\"textarea\" placeholder=\"Write your proposed solution here. Ex. Provide basic healthcare to people with incomes less than $15,000 per year...\"></textarea>\n                                        </div>\n                                </div>\n\n                                <article className={this.state.submitted ? \"message is-success\" : \"message is-success is-hidden\"}>\n                                    <div className=\"message-body\">\n                                        Your entry has been submitted! Feel free to come back to this page at any time and edit your entry (your progress is stored in the cloud)!\n                                    </div>\n                                </article>\n\n                                <div className=\"control\">\n                                    <button type=\"submit\" className=\"button is-primary\">Submit</button>\n                                </div>\n                            </form>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Policy;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport firebase from 'firebase';\n\nclass State extends React.Component {\n    constructor(props) {\n        super(props);\n        //this.props.firebase.database().ref('submissions/officer/').child(this.props.firebase.auth().currentUser.uid).set({...this.state});\n        this.state = {\n        };\n    }\n\n    componentDidMount = () => {\n        firebase.database().ref('submissions/director/' + firebase.auth().currentUser.uid).once('value').then((snapshot) => {\n            this.setState(snapshot.val());\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        // this.setState({ submitted: true }, () => {\n        //     //this.props.firebase.database().ref('submissions/officer/').child(this.props.firebase.auth().currentUser.uid).set({...this.state});\n        //     firebase.database().ref('submissions/director/' + firebase.auth().currentUser.uid).set(this.state);\n        //     console.log(this.state);\n        // });\n    }\n\n    handleChanges(e) {\n        // this.setState({ [e.target.name]: e.target.value }, () => {\n        //     //this.props.firebase.database().ref('submissions/officer/').child(this.props.firebase.auth().currentUser.uid).set({...this.state});\n        //     firebase.database().ref('submissions/director/' + firebase.auth().currentUser.uid).set(this.state);\n        //     console.log(this.state);\n        // });\n    }\n    \n    render() {\n        return (\n            <div className=\"section\">\n                <div className=\"card\">\n                    <div className=\"card-header\">\n                        <p className=\"card-header-title\">State/National Director Application</p>\n                    </div>\n                    <div className=\"card-content\">\n                        <div className=\"content\">\n                            <form onSubmit={this.handleSubmit}>\n                                <article className={\"message is-info\"}>\n                                    <div className=\"message-body\">\n                                        <Link to=\"/status\">View your status update here.</Link><br />\n                                        Applications are closed at this time. You may continue to view or archive your application until 2 weeks after results are released. Please click the link above to access your status update, and email <a href=\"mailto:help@unipolitics.org\">help@unipolitics.org</a> for technical problems.\n                                    </div>\n                                </article>\n\n                                <div className=\"field\">\n                                    <label className=\"label\">Name</label>\n                                        <div className=\"control\">\n                                            <input value={this.state.name} required onChange={this.handleChanges} name=\"name\" className=\"input\" type=\"text\" placeholder=\"e.g. John Smith\" disabled />\n                                        </div>\n                                </div>\n\n                                <div className=\"field\">\n                                    <label className=\"label\">Email</label>\n                                        <div className=\"control\">\n                                            <input value={this.state.email} required onChange={this.handleChanges} name=\"email\" className=\"input\" type=\"text\" placeholder=\"e.g. john@example.com\" disabled />\n                                        </div>\n                                </div>\n\n                                <div className=\"field\">\n                                    <label className=\"label\">Phone Number</label>\n                                        <div className=\"control\">\n                                            <input value={this.state.phone} onChange={this.handleChanges} name=\"phone\" className=\"input\" type=\"text\" placeholder=\"(Optional) e.g. 225-800-1024\" disabled />\n                                        </div>\n                                </div>\n\n                                <div className=\"field\">\n                                    <label className=\"label\">School</label>\n                                        <div className=\"control\">\n                                            <input value={this.state.school} required onChange={this.handleChanges} name=\"school\" className=\"input\" type=\"text\" placeholder=\"e.g. Mainville High School or University of Mainville\" disabled />\n                                        </div>\n                                </div>\n\n                                <div className=\"field\">\n                                    <label className=\"label\">Location (City + State or Nation)</label>\n                                        <div className=\"control\">\n                                            <input value={this.state.location} required onChange={this.handleChanges} name=\"location\" className=\"input\" type=\"text\" placeholder=\"e.g. Washington, DC or Manilla, Philippines\" disabled />\n                                        </div>\n                                </div>\n\n                                <div className=\"field\">\n                                    <label className=\"label\">Type of Campus</label>\n                                    <div className=\"control\">\n                                        <div className=\"select\">\n                                            <select value={this.state.campustype} required onChange={this.handleChanges} name=\"campustype\" disabled>\n                                                <option value=\"hs\">High School</option>\n                                                <option value=\"c/u\">College/University</option>\n                                                <option value=\"other\">Other</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className=\"field\">\n                                    <label className=\"label\">Graduation Year</label>\n                                    <div className=\"control\">\n                                        <div className=\"select\">\n                                            <select value={this.state.grade} required onChange={this.handleChanges} name=\"grade\" disabled>\n                                                <option value=\"2019\">2019</option>\n                                                <option value=\"2020\">2020</option>\n                                                <option value=\"2021\">2021</option>\n                                                <option value=\"2022\">2022</option>\n                                                <option value=\"2023\">2023</option>\n                                                <option value=\"2024\">2024</option>\n                                                <option value=\"2025\">2025</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className=\"field\">\n                                    <label className=\"label\">What sets you apart from other candidates? Describe, if any, prior organizing experience.</label>\n                                        <div className=\"control\">\n                                        <textarea value={this.state.different} required onChange={this.handleChanges} name=\"different\" className=\"textarea\" placeholder=\"There are no character or word limits on this answer.\" disabled></textarea>\n                                        </div>\n                                </div>\n\n                                <div className=\"field\">\n                                    <label className=\"label\">Briefly explain why you are fit for the role. What have you done in the past in terms of community involvement, volunteering, and/or leadership?</label>\n                                        <div className=\"control\">\n                                        <textarea value={this.state.fitforrole} required onChange={this.handleChanges} name=\"fitforrole\" className=\"textarea\" placeholder=\"There are no character or word limits on this answer.\" disabled></textarea>\n                                        </div>\n                                </div>\n\n                                <div className=\"field\">\n                                    <label className=\"label\">Why are you interested in becoming a State/National Director?</label>\n                                        <div className=\"control\">\n                                        <textarea value={this.state.why} required onChange={this.handleChanges} name=\"why\" className=\"textarea\" placeholder=\"There are no character or word limits on this answer.\" disabled></textarea>\n                                        </div>\n                                </div>\n\n                                <div className=\"field\">\n                                    <label className=\"label\">(Optional) What are your ideas for Unipolitics? What are some projects that you believe could help extend political awareness and neutrality in our communities worldwide?</label>\n                                        <div className=\"control\">\n                                        <textarea value={this.state.ideas} onChange={this.handleChanges} name=\"ideas\" className=\"textarea\" placeholder=\"(Optional) Almost done! There are no character or word limits on this answer.\" disabled></textarea>\n                                        </div>\n                                </div>\n\n                                <div className=\"field\">\n                                    <label className=\"label\">(Optional) Anything else you'd like us to know?</label>\n                                        <div className=\"control\">\n                                        <textarea value={this.state.anything} onChange={this.handleChanges} name=\"anything\" className=\"textarea\" placeholder=\"(Optional) Last step! There are no character or word limits on this answer.\" disabled></textarea>\n                                        </div>\n                                </div>\n\n                                {/* <article className={this.state.submitted ? \"message is-success\" : \"message is-success is-hidden\"}>\n                                    <div className=\"message-body\">\n                                        Your application has been submitted! Feel free to come back to this page at any time and edit your application (your progress is stored in the cloud)!\n                                    </div>\n                                </article> */}\n\n                                <div className=\"control\">\n                                    <button type=\"submit\" className=\"button is-primary\">Submit</button>\n                                </div>\n                            </form>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default State;","import React, { Component } from \"react\";\nimport { NavLink } from 'react-router-dom';\nimport firebase from 'firebase';\n// import NavLink from \"./NavLink\";\n\nclass Nav extends Component {\n    render() {\n        return (\n            <div>\n                <nav className=\"nav has-shadow\">\n                        <div className=\"container\">\n                            <div className=\"nav-left\">\n                                <a className=\"nav-item\">\n                                    <img src=\"unipoliticslogonew.png\" />\n                                </a>\n                            </div>\n                            <label htmlFor=\"menu-toggle\" className=\"nav-toggle\">\n                                <span></span>\n                                <span></span>\n                                <span></span>\n                            </label>\n                            <input type=\"checkbox\" id=\"menu-toggle\" className=\"is-hidden\" ref={ref => this.checkBox = ref} />\n                            <div className=\"nav-right nav-menu\">\n                                <NavLink to=\"/\" onClick={() => {this.checkBox.checked = false;}} className=\"nav-item is-tab is-hidden-tablet\">\n                                    <span className=\"icon\"><i className=\"fa fa-home\"></i></span> Home\n                                </NavLink>\n                                <NavLink to=\"/director\" onClick={() => {this.checkBox.checked = false;}} className=\"nav-item is-tab is-hidden-tablet\">\n                                    <span className=\"icon\"><i className=\"fa fa-comment\"></i></span> State/National Director Application\n                                </NavLink>\n                                {/* <a onClick={() => {this.setState({active: \"Policy\"}); this.checkBox.checked = false;}} className=\"nav-item is-tab is-hidden-tablet\">\n                                    <span className=\"icon\"><i className=\"fa fa-comment-alt\"></i></span> Policy Solutions\n                                </a> */}\n                                {/* <a onClick={() => {this.setState({active: \"About\"}); this.checkBox.checked = false;}} className=\"nav-item is-tab is-hidden-tablet\">\n                                    <span className=\"icon\"><i className=\"fa fa-info\"></i></span> About\n                                </a> */}\n\n                                <a className=\"nav-item is-tab is-active\">\n                                    <span className=\"icon\"><i className=\"fa fa-user\"></i></span>{firebase.auth().currentUser.displayName}\n                                </a>\n                                <a onClick={() => firebase.auth().signOut()} className=\"nav-item is-tab\">\n                                    <span className=\"icon\"><i className=\"fa fa-sign-out-alt\"></i></span>\n                                </a>\n                            </div>\n                        </div>\n                    </nav>\n\n                <section className=\"main-content columns is-fullheight\">\n\n                    <aside className=\"column is-2 is-narrow-mobile is-fullheight section is-hidden-mobile\">\n                        <p className=\"menu-label is-hidden-touch\">Navigation</p>\n                        <ul className=\"menu-list\">\n                            <li>\n                                <NavLink activeClassName='is-active' to=\"/\" exact>\n                                    <span className=\"icon\"><i className=\"fa fa-home\"></i></span> Home\n                                </NavLink>\n                            </li>\n                            <li>\n                                <a onClick={(e) => {e.preventDefault()}}>\n                                    <span className=\"icon\"><i className=\"fa fa-table\"></i></span> Applications\n                                </a>\n\n                                <ul>\n                                    <li>\n                                        <NavLink activeClassName='is-active' to=\"/director\">\n                                            <span className=\"icon is-small\"><i className=\"fa fa-comment\"></i></span> State/National Director\n                                        </NavLink>\n                                        {/* <a onClick={() => this.setState({active: \"National\"})} className={this.state.active === \"National\" ? \"is-active\" : \"\"}>\n                                            <span className=\"icon is-small\"><i className=\"fa fa-comment-alt\"></i></span> Policy Solutions\n                                        </a> */}\n                                    </li>\n                                </ul>\n                            </li>\n                            {/* <li>\n                                <a onClick={() => this.setState({active: \"About\"})} className={this.state.active === \"About\" ? \"is-active\" : \"\"}>\n                                    <span className=\"icon\"><i className=\"fa fa-info\"></i></span> About\n                                </a>\n                            </li> */}\n                        </ul>\n                    </aside>\n                    <div className=\"container column is-10\">\n                        {this.props.content}\n                    </div>\n                </section>\n            </div>\n        );\n    }\n}\nexport default Nav;","import React from 'react';\n\nclass Construction extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return(\n            <div class=\"section\">\n                <div class=\"card\">\n                    <div class=\"card-header\">\n                        <p class=\"card-header-title\">Unipolitics</p>\n                    </div>\n                    <div class=\"card-content\">\n                        <article class=\"message is-warning\">\n                            <div class=\"message-body\">\n                                We are a student-run organization dedicated to advocating for political awareness, activism, and civic education called <a href=\"https://unipolitics.org\">Unipolitics</a>.\n                            </div>\n                        </article>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n};\n\nexport default Construction;","import React from 'react';\nimport firebase from 'firebase';\nimport Construction from '../Construction/Construction';\n\nclass StatusUpdate extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    componentDidMount() {\n        var parent = this;\n        firebase.database().ref('submissions/director/' + firebase.auth().currentUser.uid).once('value').then(function(snapshot) {\n            parent.setState({\"fetched\": true, ...snapshot.val()});\n        });\n    }\n\n    handleChanges = (e) => {\n        this.setState({ [e.target.name]: e.target.value }, () => {\n            //this.props.firebase.database().ref('submissions/officer/').child(this.props.firebase.auth().currentUser.uid).set({...this.state});\n            firebase.database().ref('submissions/director/' + firebase.auth().currentUser.uid).update(this.state);\n            console.log(this.state);\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.setState({ confirmed: true }, () => {\n            //this.props.firebase.database().ref('submissions/officer/').child(this.props.firebase.auth().currentUser.uid).set({...this.state});\n            firebase.database().ref('submissions/director/' + firebase.auth().currentUser.uid).update(this.state);\n            console.log(this.state);\n        });\n    }\n\n    render() {\n        return(\n            <div class=\"section\">\n                <div class=\"card\">\n                    <div class=\"card-header\">\n                        <p class=\"card-header-title\">Status Update</p>\n                    </div>\n                    <div class=\"card-content\" style={{fontFamily: \"Tinos, serif\", color: \"black\", display: (JSON.stringify(this.state).length <= 3 || this.state.name == undefined || this.state.position == undefined) ? \"none\" : \"inherit\"}}>\n                        July 26th, 2019\n                        <br />\n                        <p>{this.state.name}\n                        <br />\n                        <br />\n                        Congratulations, our team is proud to notify you that you have been appointed as {this.state.position}.\n                        <br /><br />\n                        Please click the button below to confirm your position and the commitments involved. We await your acceptance.\n                        <br /><br />\n                        We will reach out to you via SMS with further instructions as well as a download link to the Unipolitics app within one week. Please verify your phone number below:\n                        <div className=\"field\">\n                                <div className=\"control\">\n                                    <input value={this.state.phone} onChange={this.handleChanges} name=\"phone\" className=\"input overclass\" type=\"text\" placeholder=\"No phone number on file. Please add one at this time.\" />\n                                </div>\n                        </div>\n                        <br />\n                        Thank you for your interest in our organization and once again - congratulations; we are sincerely looking forward to working with you.\n                        <br /><br />\n                        Regards, <br />\n                        The Unipolitics Team\n                        <br />\n\n                        </p>\n                        <form onSubmit={this.handleSubmit}>\n                            <div className=\"control\">\n                                <button type=\"submit\" className=\"button is-primary overclass\">{\"Confirm my position as \" + this.state.position}</button>\n                            </div>\n                        </form>\n                        <br />\n\n                        <article className={this.state.confirmed ? \"message is-success\" : \"message is-warning\"}>\n                            <div className=\"message-body\">\n                                {this.state.confirmed ? \"You have successfully confirmed your position!\" : \"Your position is currently unconfirmed. Please click the button above to confirm.\"}\n                            </div>\n                        </article>\n                    </div>\n                    <div class=\"card-content\" style={{color: \"black\", display: (JSON.stringify(this.state).length <= 3 || this.state.name == undefined || this.state.position == undefined) && this.state.fetched ? \"inherit\" : \"none\"}}>\n                        <article className={\"message is-danger\"}>\n                            <div className=\"message-body\">\n                                Unfortunately, there are no status updates referencing your account at this time. Please contact help@unipolitics.org for more assistance.\n                            </div>\n                        </article>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n};\n\nexport default StatusUpdate;","import React from 'react';\nimport \"./MainPage.css\";\nimport Officer from '../Officer/Officer';\nimport Journalism from '../Journalism/Journalism';\nimport Policy from '../Policy/Policy';\nimport State from '../State/State';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Nav from \"../Nav/Nav\";\nimport Construction from \"../Construction/Construction\";\nimport StatusUpdate from \"../StatusUpdate/StatusUpdate\";\n\nconst NavRoute = ({exact, path, component: Component}) => (\n    <Route exact={exact} path={path} render={(props) => (\n        <div>\n            <Nav content={(<Component {...props}/>)}/>\n        </div>\n    )}/>\n)\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    \n    render() {\n        return(\n            <Router>\n                <Switch>\n                    <NavRoute exact component={Construction} path=\"/\" />\n                    <NavRoute exact component={State} path=\"/director\" />\n                    <NavRoute exact component={StatusUpdate} path=\"/status\" />\n                </Switch>\n            </Router>\n        )\n    }\n};\n\nexport default MainPage;","import React from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from 'firebase';\nimport \"./App.css\";\nimport MainPage from './components/MainPage/MainPage';\n\n// Configure Firebase.\nvar config = {\n  apiKey: \"AIzaSyB9blWl65AEgWXTQoIAqIVabDyuObcXF2Q\",\n  authDomain: \"panel.unipolitics.org\",\n  databaseURL: \"https://unipolitics-8787d.firebaseio.com\",\n  projectId: \"unipolitics-8787d\",\n  storageBucket: \"unipolitics-8787d.appspot.com\",\n  messagingSenderId: \"375050650768\"\n};\nfirebase.initializeApp(config);\n\nclass App extends React.Component {\n  // The component's Local state.\n  state = {\n    isSignedIn: false, // Local signed-in state.\n    hasUpdated: false\n  };\n\n  // Configure FirebaseUI.\n  uiConfig = {\n    // Popup signin flow rather than redirect flow.\n    signInFlow: 'popup',\n    // We will display Google as auth providers.\n    signInOptions: [\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID\n    ],\n    callbacks: {\n      // Avoid redirects after sign-in.\n      signInSuccessWithAuthResult: () => false\n    }\n  };\n\n  // Listen to the Firebase Auth state and set the local state.\n  componentDidMount() {\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\n        (user) => {\n          this.setState({isSignedIn: !!user, hasUpdated: true});\n        }\n    );\n  }\n  \n  // Make sure we un-register Firebase observers when the component unmounts.\n  componentWillUnmount() {\n    this.unregisterAuthObserver();\n  }\n\n  render() {\n    if (!this.state.isSignedIn && this.state.hasUpdated) {\n      return (\n        <div style={{textAlign: \"center\"}}>\n          <link href=\"login.css\" rel=\"stylesheet\" />\n          <img src=\"unipoliticslogonew.png\" style={{width: \"80%\", maxWidth: \"700px\", height: \"auto\"}}/>\n          <StyledFirebaseAuth style={{verticalAlign: \"middle\"}} uiConfig={this.uiConfig} firebaseAuth={firebase.auth()}/>\n        </div>\n      );\n    } else if (this.state.hasUpdated && this.state.isSignedIn) {\n      return (\n        <MainPage logOutHandler={() => firebase.auth().signOut()} firebase={firebase}/>\n      );\n    } else {\n      return (\n        <div></div>\n      );\n    }\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import { render } from 'react-snapshot';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// render(<App />, document.getElementById('root'));\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}